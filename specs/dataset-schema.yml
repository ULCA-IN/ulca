openapi: 3.0.0
info:
  title: ULCA - Dataset Schema
  description: >-
    Dataset and it supporting schema
  contact:
    name: ekstep foundation
    email: contact@ekstep.org
  version: 0.7.0
servers:
  - url: /ulca
paths: {}
components:
  schemas:
    DatasetDirectory:
      type: object
      required: 
        - data
        - params
      description: The object defines the physical structure of the uploaded dataset file. The dataset data and its respective parameters has to be present in an individual directory/folder. The dataset data should have name 'data.json' or 'data.csv', similarly the associated parameters should have name 'params.json' or 'params.csv'. Dataset data file should adhere to 'dataSchema' described in the properties, similarly the parameter of the dataset should adhere to 'paramSchema'. Non compliant will result in rejection of the submission.
      properties:
        data:
          $ref: '#/components/schemas/DatasetFile'
        dataSchema:
          $ref: '#/components/schemas/DatasetDataRowSchema'
        params:
          $ref: '#/components/schemas/DatasetFile'
        paramSchema:
          $ref: '#/components/schemas/DatasetParamsSchema'

    DatasetDirectories:
      type: object
      description: The object represents a compressed file that can contains multiple 'DatasetDirectory' object.
      properties:
        datasetFiles:
          type: array
          items:
            $ref: '#/components/schemas/DatasetDirectory'

    DatasetParamsSchema:
      type: object
      description: the dataset params.json/.csv file should follow this schema
      properties:
        params: 
          type: object
          oneOf:
            - $ref: '#/components/schemas/ParallelDatasetParamsSchema'
            - $ref: '#/components/schemas/MonolingualParamsSchema'
            - $ref: '#/components/schemas/AsrParamsSchema'
            - $ref: '#/components/schemas/AsrUnlabeledParamsSchema'
            - $ref: '#/components/schemas/OcrDatasetParamsSchema'
            - $ref: '#/components/schemas/DocumentLayoutParamsSchema'

    DatasetDataRowSchema:
      type: object
      description: the dataset data.json/.csv file should follow this schema
      properties:
        data:
          type: object
          oneOf:
            - $ref: '#/components/schemas/ParallelDatasetRowSchema'
            - $ref: '#/components/schemas/MonolingualRowSchema'
            - $ref: '#/components/schemas/AsrRowSchema'
            - $ref: '#/components/schemas/AsrUnlabeledRowSchema'
            - $ref: '#/components/schemas/OcrDatasetRowSchema'
            - $ref: '#/components/schemas/DocumentLayoutRowSchema'

    DatasetCommonParamsSchema:
      type: object
      description: common parameters or attributes of dataset that is primarily same across the supported dataset.
      required:
        - datasetType
        - languages
        - collectionSource
        - domain
        - license
        - submitter
      properties:
        version:
          type: string
          default: 1.0
          description: params schema version
        datasetType:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/DatasetType'
        languages:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/LanguagePair'
        collectionSource:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/Source'
        domain:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/Domain'
        license:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/License'
        submitter:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/Submitter'

    ParallelDatasetParamsSchema:
      allOf:
        - $ref: '#/components/schemas/DatasetCommonParamsSchema'
        - type: object
      type: object
      properties:
        collectionMethod:
          $ref: '#/components/schemas/ParallelDatasetCollectionMethod'

    ParallelDatasetRowSchema:
      required:
        - sourceText
        - targetText
      properties:
        sourceText:
          type: string
          description: textual data in source language
        targetText:
          type: string
          description: textual data in target language
        collectionMethod:
          $ref: '#/components/schemas/ParallelDatasetCollectionMethod'
      type: object
      description: the schema of data file uploaded should adhere to this specified structure.

    MonolingualParamsSchema:
      allOf:
        - $ref: '#/components/schemas/DatasetCommonParamsSchema'
        - type: object
      type: object

    MonolingualRowSchema:
      required:
        - text
      type: object
      description: the schema defines the column/attribute name of the data file uploaded.
      properties:
        text:
          type: string
          description: textual data in source language

    AsrParamsSchema:
      allOf:
        - $ref: '#/components/schemas/DatasetCommonParamsSchema'
        - type: object
      type: object
      properties:
        format:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/AudioFormat'
        channel:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/AudioChannel'
        samplingRate:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/AudioSampleRate'
        bitsPerSample:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/AudioBitsPerSample'
        numberOfSpeakers:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/NumberOfSpeakers'
        gender:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/Gender'
        age:
          type: string
          description: age range
          enum:
            - "0-9"
            - "10-19"
            - "20-29"
            - "30-39"
        dialect:
          type: string
          description: valid dialact of the submitted language.
          example: 'langaugeCode-<location or dialect name>'
          enum:
            - 'hi-thethi'
            - 'hi-magahi'
            - 'ta-madurai'
        snr:
          $ref: '#/components/schemas/AudioQualityEvaluation'
        collectionMethod: 
          $ref: '#/components/schemas/CollectionMethodAudio'

    AsrRowSchema:
      required:
        - audioFilename
        - text
      type: object
      description: the schema defines the column name present in physical file that is being pointed by dataFilename key.
      properties:
        audioFilename:
          type: string
          description: filename of the audio file
        text:
          type: string
          description: textual output of the audio
        speaker:
          type: string
          description: speaker name or id for the audio utterance
        duration: 
          type: number
          description: audio duration in seconds
        collectionSource:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/Source'
        channel:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/AudioChannel'
        samplingRate:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/AudioSampleRate'
        bitsPerSample:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/AudioBitsPerSample'      
        gender:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/Gender'
        age:
          type: string
          description: age range
          enum:
            - "0-9"
            - "10-20"
            - "21-60"
            - "60-100"
        dialect:
          type: string
          description: valid dialact of the submitted language.
          example: 'langaugeCode-<location or dialect name>'
          enum:
            - 'hi-thethi'
            - 'hi-magahi'
            - 'ta-madurai'
        snr:
          $ref: '#/components/schemas/AudioQualityEvaluation'
        startTime:
          type: string
          description: "Time of the audio from where the processing starts. Format : hh:mm:ss"
        endTime:
          type: string
          description: "Time of the audio where the processing end. Format : hh:mm:ss"
        collectionMethod: 
          $ref: '#/components/schemas/CollectionMethodAudio'

    AsrUnlabeledParamsSchema:
      allOf:
        - $ref: '#/components/schemas/AsrParamsSchema'
        - type: object

    AsrUnlabeledRowSchema:
      required:
        - audioFilename
      type: object
      description: the schema defines the column name present in physical file that is being pointed by dataFilename key.
      properties:
        audioFilename:
          type: string
          description: filename of the audio file
        channel:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/AudioChannel'
        samplingRate:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/AudioSampleRate'
        speaker:
          type: string
          description: speaker name or id for the audio utterance
        duration: 
          type: number
          description: audio duration in seconds
        collectionSource:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/Source'
        bitsPerSample:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/AudioBitsPerSample'      
        gender:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/Gender'
        age:
          type: string
          description: age range
          enum:
            - "0-9"
            - "10-20"
            - "21-60"
            - "60-100"
        dialect:
          type: string
          description: valid dialact of the submitted language.
          example: 'langaugeCode-<location or dialect name>'
          enum:
            - 'hi-thethi'
            - 'hi-magahi'
            - 'ta-madurai'
        snr:
          $ref: '#/components/schemas/AudioQualityEvaluation'
        startTime:
          type: string
          description: "Time of the audio from where the processing starts. Format : hh:mm:ss"
        endTime:
          type: string
          description: "Time of the audio where the processing end. Format : hh:mm:ss"
          

    OcrDatasetParamsSchema:
      allOf:
        - $ref: '#/components/schemas/DatasetCommonParamsSchema'
        - type: object
      required:
        - format
        - dpi
        - imageTextType
      type: object
      properties:
        format:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/ImageFormat'
        dpi:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/ImageDPI'
        imageTextType:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/ImageTextType'
        collectionMethod:
          $ref: '#/components/schemas/OcrCollectionMethod'

    OcrDatasetRowSchema:
      required:
        - imageFilename
        - groundTruth
      type: object
      description: the schema defines the column name present in physical file that is being pointed by dataFilename key.
      properties:
        imageFilename:
          type: string
          description: filename of the image file
        groundTruth:
          type: string
          description: text data present in boundingbox
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
        collectionMethod:
          $ref: '#/components/schemas/OcrCollectionMethod'

    DocumentLayoutParamsSchema:
      type: object
      required:
        - datasetType
        - collectionSource
        - license
        - submitter
        - format
        - dpi
      properties:
        datasetType:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/DatasetType'
        collectionSource:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/Source'
        license:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/License'
        submitter:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/Submitter'
        format:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/ImageFormat'
        dpi:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/ImageDPI'
        collectionMethod:
          $ref: '#/components/schemas/OcrCollectionMethod'

    DocumentLayoutRowSchema:
      required:
        - imageFilename
        - layoutClass
        - boundingBox
      type: object
      description: the schema defines the document layout datasets.
      properties:
        imageFilename:
          type: string
          description: filename of the image file
        layoutClass:
          type: string
          enum:
            - paragraph
            - line
            - word
            - signatureImage
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'

    DatasetFile:
      type: object
      description: represent the physical file attributes
      required:
        - filename
        - fileType
      properties:
        filename:
          type: string
          description: name of the file
          enum:
            - data
            - params
        fileType:
          type: string
          description: file format
          enum:
            - json
            - csv

    Dataset:
      required:
        - description
        - datasetFileId
      type: object
      description: describes the dataset schema
      properties:
        datasetId:
          type: string
          description: unique identification of the dataset. This will be auto-generated value once the submitted dataset is validated by the system
          format: uuid4
        count:
          minimum: 100
          type: number
          description: actual number of unique records present under a dataset. The count can/will vary from the original submitted dataset because of validation stage.
        description:
          maxLength: 200
          minLength: 50
          type: string
          description: describes the purpose and usage of the dataset so that other user can get benefit out of it.
          example: contribution from team Anuvaad for government press release domain
        datasetFileId:
          $ref: '#/components/schemas/DatasetFileIdentifier'
        submittedOn:
          type: string
          description: timestamp when dataset is uploaded
          format: datetime
        validatedOn:
          type: string
          description: timestamp when dataset is validated
          format: datetime
        publishedOn:
          type: string
          description: timestamp when dataset got listed
          format: datetime

    DatasetFileIdentifier:
      type: object
      required:
        - fileId
        - datasetFormatType
      description: the identifier object retuned when compressed dataset file is uploaded. https://raw.githubusercontent.com/tus/tus-resumable-upload-protocol/master/OpenAPI/openapi3.yaml
      properties:
        fileId:
          type: string
          format: uuidv4
          description: upload identifier returned by the file upload service
        datasetFormatType:
          type: string
          enum:
            - json
            - csv
        timestamp:
          type: string
          format: datetime
          description: upload completed timestamp
        format:
          type: string
          description: supported file compression format
          enum:
            - tar_gz
            - zip

    BoundingBox:
      type: object
      properties:
        vertices:
          minLength: 4
          type: array
          items:
            $ref: '#/components/schemas/Vertex'
      description: array of vertex with clockwise coordinate arrangement

    Vertex:
      type: object
      properties:
        x:
          type: number
          description: x-coordinate
        y:
          type: number
          description: y-coordinate

    DatasetProgressInformation:
      type: object
      description: informs the progress for every submitted records in the dataset.
      properties:
        totalRecordCount:
          type: integer
          description: total number of records count submitted
        validaatedRecordCount:
          type: integer
          description: how many records have validated
        failedRecordCount:
          type: integer
          description: how many records failed the valdiation
        validationReportId:
          type: string
          description: download why the records failed the validation
          format: uuid4

    ## parallel dataset collection method
    MTAutomaticEvaluationMethod:
      type: object
      description: evaluation strategy as proposed by https://www.researchgate.net/publication/273475626_Adequacy-Fluency_Metrics_Evaluating_MT_in_the_Continuous_Space_Model_Framework
      required:
        - adequacy
        - fluency
      properties:
        adequacy:
          type: number
          description: Adequacy is a rating of how much information is transferred between the original and the translation
          minimum: 1
          maximum: 5
        fluency:
          type: number
          description: fluency is a rating of how good the translation is
          minimum: 1
          maximum: 5

    MachineTranslatedEvaluationMethod2:
      type: object
      description: evaluation strategy as proposed by example researcher.
      properties:
        unknownParameter1:
          type: number
          description: researcher has defined this parameter
        unknownParameter2:
          type: number
          description: researcher has defined this parameter
        unknownParameter3:
          type: number
          description: researcher has defined this parameter

    CollectionDetailsMachineTranslated:
      type: object
      description: machine translated collection details
      required:
        - translationModel
      properties:
        translationModel:
          type: string
          description: name of the translation model/engine used
          example: 'google translation'
        translationModelVersion:
          type: string
          description: translation model/engine version
        evaluationMethod:
          type: object
          oneOf:
            - $ref: '#/components/schemas/MTAutomaticEvaluationMethod'
            - $ref: '#/components/schemas/MachineTranslatedEvaluationMethod2'
        evaluationMethodType:
          type: string
          description: manual evaluation strategy adopted
          example: 'MTAutomaticEvaluationMethod'
          enum:
            - 'MTAutomaticEvaluationMethod'
            - 'MachineTranslatedEvaluationMethod2'

    CollectionDetailsAutoAligned:
      type: object
      description: auto-aligned collection details
      required:
        - alignmentTool
      properties:
        alignmentTool:
          type: string
          description: name of the alignment tool
          example: "LaBSE"
          enum:
            - 'LaBSE'
            - 'LASER'
        alignmentToolVersion:
          type: string
          description: alignment tool version
          example: "LaBSE version 3.0"
        alignmentScore:
          type: number
          description: the alignment score between sourceText and targetText

    CollectionDetailsAutoAlignedFromParallelDocs:
      type: object
      description: auto-aligned-from-parallel-docs collection details
      required:
        - alignmentTool
      properties:
        alignmentTool:
          type: string
          description: name of the alignment tool
          example: "LaBSE"
          enum:
            - 'LaBSE'
            - 'LASER'
        alignmentToolVersion:
          type: string
          description: alignment tool version
          example: "LaBSE version 3.0"
        alignmentScore:
          type: number
          description: the alignment score between sourceText and targetText

    CollectionDetailsManualAligned:
      type: object
      description: manual aligned collection details. The pair was mapped manually from existing parallel documents. 
      properties:
        editingTool:
          type: string
          description: name of the editing tool
          example: 'microsoft excel'
        editingToolVersion:
          type: string
          description: editing tool version
        contributor:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/Contributor'

    CollectionDetailsMachineTranslatedPostEdited:
      type: object
      description: machine translated and post edited collection details
      properties:
        translationModel:
          type: string
          description: name of the translation model/engine used
          example: 'google translation'
        translationModelVersion:
          type: string
          description: translation model/engine version
        editingTool:
          type: string
          description: name of the post editing tool
          example: 'google translation'
        editingToolVersion:
          type: string
          description: post editing tool version
        contributor:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/Contributor'
        timeSpentInSeconds:
          type: number
          description: time spent by user to translated the sentence.
        numOfKeysPressed:
          type: number
          description: number of keyboard keys pressed 

    CollectionDetailsManualTranslated:
      type: object
      description: manual translated collection details
      properties:
        editingTool:
          type: string
          description: name of the post editing tool
          example: 'google translation'
        editingToolVersion:
          type: string
          description: post editing tool version
        contributor:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/Contributor'
        timeSpentInSeconds:
          type: number
          description: time spent by user to translated the sentence.
        numOfKeysPressed:
          type: number
          description: number of keyboard keys pressed

    CollectionDetailsOcr:
      type: object
      description: OCR collection details
      required:
        - ocrTool
      properties:
        ocrTool:
          type: string
          description: name of the ocr tool
          example: 'google cloud vision'
          enum:
            - 'google cloud vision'
            - 'tesseract'
            - 'anuvaad ocr'
            - 'microsoft azure computer vision'
            - 'calamari'
            - 'ocropus'
            - 'amazon textract'
            - 'abbyy cloud ocr'
            - 'unknown'
        ocrToolVersion:
          type: string
          description: ocr tool version
          example: "LaBSE version 3.0"

    ParallelDatasetCollectionMethod:
      type: object
      description: specifies how the dataset is curated.
      required:
        - collectionDescription
      properties:
        collectionDescription:
          type: array
          description: various collection methods user have used to create the dataset
          items:
            type: string
            minItems: 1
            maxItems: 10
            enum:
              - auto-aligned
              - auto-aligned-from-parallel-docs
              - manual-aligned
              - machine-translated
              - machine-translated-post-edited
              - manual-translated
        collectionDetails:
          oneOf:
            - $ref: '#/components/schemas/CollectionDetailsAutoAligned'
            - $ref: '#/components/schemas/CollectionDetailsAutoAlignedFromParallelDocs'
            - $ref: '#/components/schemas/CollectionDetailsManualAligned'
            - $ref: '#/components/schemas/CollectionDetailsMachineTranslated'
            - $ref: '#/components/schemas/CollectionDetailsMachineTranslatedPostEdited'
            - $ref: '#/components/schemas/CollectionDetailsManualTranslated'

    OcrCollectionMethod:
      type: object
      description: specifies how the dataset is curated.
      required:
        - collectionDescription
      properties:
        collectionDescription:
          type: array
          description: various collection methods user have used to create the dataset
          items:
            type: string
            minItems: 1
            maxItems: 10
            enum:
              - web-scraping-ocr
              - scanned-ocr
              - screen-capture
        collectionDetails:
          $ref: '#/components/schemas/CollectionDetailsOcr'

    ## asr dataset collection method
    TranscriptionEvaluationMethod1:
      type: object
      description: transcription evalution method description
      properties:
        wer:
          type: number
          description: model generated vs human transcribed output comp

    CollectionDetailsAudioAutoAligned:
      type: object
      description: auto-aligned collection details
      required:
        - alignmentTool
      properties:
        alignmentTool:
          type: string
          description: name of the alignment tool
          enum:
            - 'AENAES'
        alignmentToolVersion:
          type: string
          description: alignment tool version
          example: "AENAES version 3.0"
        alignmentScore:
          type: number
          description: the alignment score between audio and text

    CollectionDetailsMachineGeneratedTranscript:
      type: object
      description: machine translated collection details
      properties:
        asrModel:
          type: string
          description: name of the asr model/engine used
          example: 'google asr'
        asrModelVersion:
          type: string
          description: asr model/engine version
        evaluationMethod:
          type: object
          oneOf:
            - $ref: '#/components/schemas/TranscriptionEvaluationMethod1'
        evaluationMethodType:
          type: string
          description: manual evaluation strategy adopted
          example: 'TranscriptionEvaluationMethod1'
          enum:
            - 'TranscriptionEvaluationMethod1'

    CollectionDetailsManualTranscribed:
      type: object
      description: manual translated collection details
      properties:
        contributor:
          $ref: 'https://raw.githubusercontent.com/project-anuvaad/ULCA/develop/specs/common-schemas.yml#/components/schemas/Contributor'

    CollectionMethodAudio:
      type: object
      description: specifies how the audio dataset has been curated.
      required:
        - collectionDescription
      properties:
        collectionDescription:
          type: array
          description: various collection methods user have used to create the dataset
          items:
            type: string
            minItems: 1
            maxItems: 10
            enum:
              - auto-aligned
              - machine-generated-transcript
              - manual-transcribed
        collectionDetails:
          oneOf:
            - $ref: '#/components/schemas/CollectionDetailsAudioAutoAligned'
            - $ref: '#/components/schemas/CollectionDetailsMachineGeneratedTranscript'
            - $ref: '#/components/schemas/CollectionDetailsManualTranscribed'

    AudioQualityEvaluation:
      type: object
      description: describes the audio quality evaluation method
      properties:
        methodType:
          type: string
          description: evaluation method used for the audio
          enum:
            - 'WadaSnr'
        methodDetails:
          oneOf:
            - $ref: '#/components/schemas/WadaSnr'

    WadaSnr:
      type: object
      description: evaluation strategy as proposed by example researcher.
      properties:
        snr:
          type: number
          description: signal to noise ratio of the audio
        snrTool:
          type: string
          description: snr evaluation tool 
        snrToolVersion:
          type: string
          description: snr evaluation tool version

    TranscriptFormat:
      type: object
      description: formatting type used in the transcription text
      properties:
        formatType:
          type: string
          description: standard or popular format used for specifying the transcription text
          enum:
            - 'TranscriptTextFormatType1'
        formatDetails:
          oneOf:
            - $ref: '#/components/schemas/TranscriptTextFormatType1'

    TranscriptTextFormatType1:
      type: object
      description: described in RT-04-guidelines
